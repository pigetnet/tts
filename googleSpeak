#!/bin/bash

#for the Raspberry Pi, we need to insert some sort of FILLER here since it cuts off the first bit of audio
lang=$1
text=$2

if [ $# -eq 1 ];then
    text=$lang
    lang="en"
fi

if [ $# -eq 0 ];then
    text="Hello world"
    lang="en"
fi

#empty the original file
echo "" > "/dev/shm/speak.mp3"

/show/listecho "Say $text with Google Translate API" $OK

len=${#text}

while [ $len -ge 100 ] ;
do
    #lets split this up so that its a maximum of 99 characters
    tmp=${text:0:100}
    text=${text:100}
    
    #now we need to make sure there aren't split words, let's find the last space and the string after it
    lastspace=${tmp##* }
    tmplen=${#lastspace}

    #here we are shortening the tmp string
    tmplen=`expr 100 - $tmplen` 
    tmp=${tmp:0:tmplen}
    
    #now we concatenate and the string is reconstructed
    text="$lastspace$text"
    len=${#text}
    
    #get the first 100 characters
    wget -q -U Mozilla -O "/dev/shm/tmp.mp3" "http://translate.google.com/translate_tts?tl=${lang}&q=$tmp&ie=UTF-8"
    cat "/dev/shm/tmp.mp3" >> "/dev/shm/speak.mp3"
done
#this will get the last remnants
wget -q -U Mozilla -O "/dev/shm/tmp.mp3" "http://translate.google.com/translate_tts?tl=${lang}&q=$text&ie=UTF-8"
if [ $? != 0 ];then
	/show/listecho "I can't access google api (Too much request done?)" $ERR
	/show/listecho "Check : https://translate.google.com/translate_tts?tl=en&q=I'm%20not%20a%20bot&ie=UTF-8" $ERR
	/show/listecho "I will try to use espeak instead" $WARN
	/do/tts/espeak "$lang" "$text"
else
cat "/dev/shm/tmp.mp3" >> "/dev/shm/speak.mp3"
#now we finally say the whole thing
cat "/dev/shm/speak.mp3" | mpg123 - 1>>/dev/shm/voice.log 2>>/dev/shm/voice.log
rm /dev/shm/tmp.mp3
rm /dev/shm/speak.mp3
rm /dev/shm/voice.log
fi
